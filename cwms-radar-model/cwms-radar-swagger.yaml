openapi: 3.0.1
info:
  title: CWMS Radar
  description: CWMS REST API for Data Retrieval
  version: '2.0'
paths:
  /cwms-data:
    get:
      summary: Get cwmsData
      operationId: getCwmsData
      responses:
        '200':
          description: Default response
  /cwms-data/location/category/{category-id}:
    get:
      tags:
        - Location Categories-Beta
      summary: Get cwmsData location category with categoryId
      description: Retrieves requested Location Category
      operationId: getCwmsDataLocationCategoryWithCategoryId
      parameters:
        - name: category-id
          in: path
          description: Specifies the Category whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the Location Category whose data is to be included in the response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCategory'
  /cwms-data/location/category:
    get:
      tags:
        - Location Categories-Beta
      summary: Get cwmsData location category
      description: Returns CWMS Location Category Data
      operationId: getCwmsDataLocationCategory
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the location category(ies) whose data is to be included in the response. If this field is not specified, matching location category information from all offices shall be returned.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationCategory'
  /cwms-data/location/group/{group-id}:
    get:
      tags:
        - Location Groups-Beta
      summary: Get cwmsData location group with groupId
      description: Retrieves requested Location Group
      operationId: getCwmsDataLocationGroupWithGroupId
      parameters:
        - name: group-id
          in: path
          description: Specifies the location_group whose data is to be included in the response
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location group whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: category-id
          in: query
          description: Specifies the category containing the location group whose data is to be included in the response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationGroup'
            text/csv:
              schema:
                $ref: '#/components/schemas/CsvV1LocationGroup'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Unit'
  /cwms-data/location/group:
    get:
      tags:
        - Location Groups-Beta
      summary: Get cwmsData location group
      description: Returns CWMS Location Groups Data
      operationId: getCwmsDataLocationGroup
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the location group(s) whose data is to be included in the response. If this field is not specified, matching location groups information from all offices shall be returned.
          schema:
            type: string
        - name: includeAssigned
          in: query
          description: 'Include the assigned locations in the returned location groups. (default: false)'
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationGroup'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CsvV1LocationGroup'
  /cwms-data/locations/{location_code}:
    get:
      tags:
        - Locations
      summary: Get cwmsData locations with location_code
      description: Returns CWMS Location Data
      operationId: getCwmsDataLocationsWithLocation_code
      parameters:
        - name: location_code
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
          required: true
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system.  Location values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Location values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Location'
            application/xml;version=2:
              schema:
                $ref: '#/components/schemas/Location'
    delete:
      tags:
        - Locations
      summary: Delete cwmsData locations with location_code
      description: Delete CWMS Location
      operationId: deleteCwmsDataLocationsWithLocation_code
      parameters:
        - name: location_code
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location whose data is to be deleted. If this field is not specified, matching location information will be deleted from all offices.
          schema:
            type: string
      responses:
        '200':
          description: Default response
    patch:
      tags:
        - Locations
      summary: Patch cwmsData locations with location_code
      description: Update CWMS Location
      operationId: patchCwmsDataLocationsWithLocation_code
      parameters:
        - name: location_code
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the office in which Location will be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/xml:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        '200':
          description: Default response
  /cwms-data/locations:
    get:
      tags:
        - Locations
      summary: Get cwmsData locations
      description: Returns CWMS Location Data
      operationId: getCwmsDataLocations
      parameters:
        - name: names
          in: query
          description: Specifies the name(s) of the location(s) whose data is to be included in the response
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system.  Location level values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
        - name: datum
          in: query
          description: "Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:\r\n1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.\r\n2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum."
          schema:
            type: string
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid values for the format field for this URI are:\r\n1.    tab\r\n2.    csv\r\n3.    xml\r\n4.  wml2 (only if name field is specified)\r\n5.    json (default)\n6.    geojson"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/tab-separated-values:
              schema:
                type: string
            text/csv:
              schema:
                type: string
            application/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            application/vnd.opengis.waterml+xml:
              schema:
                $ref: '#/components/schemas/Unit'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Unit'
    post:
      tags:
        - Locations
      summary: Post cwmsData locations
      description: Create new CWMS Location
      operationId: postCwmsDataLocations
      parameters:
        - name: office
          in: query
          description: Specifies the office in which Location will be created
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/xml:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        '200':
          description: Default response
  /cwms-data/offices/{office}:
    get:
      tags:
        - Offices
      summary: Get cwmsData offices with office
      operationId: getCwmsDataOfficesWithOffice
      parameters:
        - name: office
          in: path
          description: The 3 letter office ID you want more information for
          required: true
          schema:
            type: string
        - name: format
          in: query
          description: "(Deprecated in favor of Accept header) Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          deprecated: true
          schema:
            type: string
      responses:
        '200':
          description: A list of offices.
          content:
            '':
              schema:
                $ref: '#/components/schemas/OfficeFormatV1'
            application/json;version=2:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Office'
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeFormatV1'
            text/tab-separated-values:
              schema:
                $ref: '#/components/schemas/TabV1Office'
            text/csv:
              schema:
                $ref: '#/components/schemas/CsvV1Office'
            application/xml:
              schema:
                $ref: '#/components/schemas/CsvV1Office'
  /cwms-data/offices:
    get:
      tags:
        - Offices
      summary: Get cwmsData offices
      operationId: getCwmsDataOffices
      parameters:
        - name: format
          in: query
          description: "(Deprecated in favor of Accept header) Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          deprecated: true
          schema:
            type: string
      responses:
        '200':
          description: A list of offices.
          content:
            '':
              schema:
                $ref: '#/components/schemas/OfficeFormatV1'
            application/json;version=2:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Office'
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeFormatV1'
            text/tab-separated-values:
              schema:
                $ref: '#/components/schemas/TabV1Office'
            text/csv:
              schema:
                $ref: '#/components/schemas/CsvV1Office'
            application/xml:
              schema:
                $ref: '#/components/schemas/CsvV1Office'
  /cwms-data/units:
    get:
      tags:
        - Units
      summary: Get cwmsData units
      operationId: getCwmsDataUnits
      parameters:
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          schema:
            type: string
      responses:
        '200':
          description: OK
        '501':
          description: The format requested is not implemented
  /cwms-data/parameters:
    get:
      tags:
        - Parameters
      summary: Get cwmsData parameters
      operationId: getCwmsDataParameters
      parameters:
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          schema:
            type: string
      responses:
        '200':
          description: OK
  /cwms-data/timezones:
    get:
      tags:
        - TimeZones
      summary: Get cwmsData timezones
      operationId: getCwmsDataTimezones
      parameters:
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          schema:
            type: string
      responses:
        '200':
          description: OK
        '501':
          description: The format requested is not implemented
  /cwms-data/levels:
    get:
      tags:
        - Levels
      summary: Get cwmsData levels
      operationId: getCwmsDataLevels
      parameters:
        - name: name
          in: query
          description: Specifies the name(s) of the location level(s) whose data is to be included in the response. Uses * for all.
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system.  Location level values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
        - name: datum
          in: query
          description: "Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:\r\n1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.\r\n2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum."
          schema:
            type: string
        - name: begin
          in: query
          description: Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time.
          schema:
            type: string
        - name: end
          in: query
          description: Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time
          schema:
            type: string
        - name: timezone
          in: query
          description: Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.
          schema:
            type: string
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid values for the format field for this URI are:\r\n1.    tab\r\n2.    csv\r\n3.    xml\r\n4.  wml2 (only if name field is specified)\r\n5.    json (default)"
          schema:
            type: string
      responses:
        '200':
          description: OK
    post:
      tags:
        - Levels
      summary: Post cwmsData levels
      description: Create new CWMS Location Level
      operationId: postCwmsDataLevels
      parameters:
        - name: office
          in: query
          description: Specifies the office in which Location Level will be created
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/LocationLevel'
        required: true
      responses:
        '200':
          description: Default response
  /cwms-data/levels/{location}:
    delete:
      tags:
        - Levels
      summary: Delete cwmsData levels with location
      description: Delete CWMS Location Level
      operationId: deleteCwmsDataLevelsWithLocation
      parameters:
        - name: location
          in: path
          required: true
          schema:
            type: string
        - name: cascade-delete
          in: query
          schema:
            type: boolean
        - name: office
          in: query
          description: Specifies the owning office of the location level whose data is to be deleted. If this field is not specified, matching location level information will be deleted from all offices.
          schema:
            type: string
        - name: date
          in: query
          description: Specifies the effective date of the level to be deleted
          schema:
            type: string
      responses:
        '200':
          description: Default response
    patch:
      tags:
        - Levels
      summary: Patch cwmsData levels with location
      description: Update CWMS Location Level
      operationId: patchCwmsDataLevelsWithLocation
      parameters:
        - name: location
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the office in which Location Level will be updated
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: Specifies the effective date of Location Level that will be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/LocationLevel'
        required: true
      responses:
        '200':
          description: Default response
  /cwms-data/timeseries/recent/{group-id}:
    get:
      summary: Get cwmsData timeseries recent with groupId
      operationId: getCwmsDataTimeseriesRecentWithGroupId
      parameters:
        - name: group-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response
  /cwms-data/timeseries/category/{category-id}:
    get:
      tags:
        - TimeSeries Categories-Beta
      summary: Get cwmsData timeseries category with categoryId
      description: Retrieves requested timeseries category
      operationId: getCwmsDataTimeseriesCategoryWithCategoryId
      parameters:
        - name: category-id
          in: path
          description: Specifies the Category whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the timeseries category whose data is to be included in the response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesCategory'
        '404':
          description: Based on the combination of inputs provided the timeseries category was not found.
        '501':
          description: request format is not implemented
  /cwms-data/timeseries/category:
    get:
      tags:
        - TimeSeries Categories-Beta
      summary: Get cwmsData timeseries category
      description: Returns CWMS timeseries category Data
      operationId: getCwmsDataTimeseriesCategory
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the timeseries category(ies) whose data is to be included in the response. If this field is not specified, matching timeseries category information from all offices shall be returned.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSeriesCategory'
        '404':
          description: Based on the combination of inputs provided the categories were not found.
        '501':
          description: request format is not implemented
  /cwms-data/timeseries/group/{group-id}:
    get:
      tags:
        - Timeseries Groups
      summary: Get cwmsData timeseries group with groupId
      description: Retrieves requested timeseries group
      operationId: getCwmsDataTimeseriesGroupWithGroupId
      parameters:
        - name: group-id
          in: path
          description: Specifies the timeseries group whose data is to be included in the response
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the timeseries group whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: category-id
          in: query
          description: Specifies the category containing the timeseries group whose data is to be included in the response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesGroup'
  /cwms-data/timeseries/group:
    get:
      tags:
        - Timeseries Groups-Beta
      summary: Get cwmsData timeseries group
      description: Returns CWMS Timeseries Groups Data
      operationId: getCwmsDataTimeseriesGroup
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the timeseries group(s) whose data is to be included in the response. If this field is not specified, matching timeseries groups information from all offices shall be returned.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSeriesGroup'
        '404':
          description: Based on the combination of inputs provided the timeseries group(s) were not found.
        '501':
          description: request format is not implemented
  /cwms-data/timeseries:
    get:
      tags:
        - TimeSeries
      summary: Get cwmsData timeseries
      operationId: getCwmsDataTimeseries
      parameters:
        - name: name
          in: query
          description: Specifies the name(s) of the time series whose data is to be included in the response. A case insensitive comparison is used to match names.
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the time series(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   (default) Specifies English unit system.  Location level values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
        - name: datum
          in: query
          description: "Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:\r\n1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.\r\n2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum."
          schema:
            type: string
        - name: begin
          in: query
          description: Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-0700[PST8PDT]'.
          schema:
            type: string
        - name: end
          in: query
          description: Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time. The format for this field is ISO 8601 extended, with optional timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-0700[PST8PDT]'.
          schema:
            type: string
        - name: timezone
          in: query
          description: "Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.\r\nIgnored if begin was specified with offset and timezone."
          schema:
            type: string
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid values for the format field for this URI are:\r\n1.    tab\r\n2.    csv\r\n3.    xml\r\n4.  wml2 (only if name field is specified)\r\n5.    json (default)"
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: pageSize
          in: query
          description: How many entries per page returned. Default 500.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A list of elements of the data set you've selected.
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/TimeSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/TimeSeries'
        '400':
          description: Invalid parameter combination
        '404':
          description: The provided combination of parameters did not find a timeseries.
        '501':
          description: Requested format is not implemented
    post:
      tags:
        - TimeSeries
      summary: Post cwmsData timeseries
      description: Create new TimeSeries
      operationId: postCwmsDataTimeseries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSeries'
          application/xml:
            schema:
              $ref: '#/components/schemas/TimeSeries'
        required: true
      responses:
        '200':
          description: Default response
  /cwms-data/timeseries/{timeseries}:
    delete:
      tags:
        - TimeSeries
      summary: Delete cwmsData timeseries with timeseries
      operationId: deleteCwmsDataTimeseriesWithTimeseries
      parameters:
        - name: timeseries
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the timeseries to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response
    patch:
      tags:
        - TimeSeries
      summary: Patch cwmsData timeseries with timeseries
      description: Update a TimeSeries
      operationId: patchCwmsDataTimeseriesWithTimeseries
      parameters:
        - name: timeseries
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSeries'
          application/xml:
            schema:
              $ref: '#/components/schemas/TimeSeries'
        required: true
      responses:
        '200':
          description: Default response
  /cwms-data/ratings/{rating}:
    get:
      tags:
        - Ratings
      summary: Get cwmsData ratings with rating
      description: Returns CWMS Rating Data
      operationId: getCwmsDataRatingsWithRating
      parameters:
        - name: rating
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the ratingset to be included in the response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Unit'
            application/xml;version=2:
              schema:
                $ref: '#/components/schemas/Unit'
    delete:
      tags:
        - Ratings
      summary: Delete cwmsData ratings with rating
      operationId: deleteCwmsDataRatingsWithRating
      parameters:
        - name: rating
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the rating to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response
    patch:
      tags:
        - Ratings
      summary: Patch cwmsData ratings with rating
      description: Update a RatingSet
      operationId: patchCwmsDataRatingsWithRating
      parameters:
        - name: rating
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/xml;version=2:
            schema:
              $ref: '#/components/schemas/Unit'
          application/json;version=2:
            schema:
              $ref: '#/components/schemas/Unit'
        required: true
      responses:
        '200':
          description: Default response
  /cwms-data/ratings:
    get:
      tags:
        - Ratings
      summary: Get cwmsData ratings
      operationId: getCwmsDataRatings
      parameters:
        - name: name
          in: query
          description: Specifies the name(s) of the rating whose data is to be included in the response. A case insensitive comparison is used to match names.
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the Rating(s) whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system.  Rating values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Rating values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
        - name: datum
          in: query
          description: "Specifies the elevation datum of the response. This field affects only elevation Ratings. Valid values for this field are:\r\n1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.\r\n2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum."
          schema:
            type: string
        - name: at
          in: query
          description: Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time.
          schema:
            type: string
        - name: end
          in: query
          description: Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time
          schema:
            type: string
        - name: timezone
          in: query
          description: Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.
          schema:
            type: string
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid values for the format field for this URI are:\r\n1.    tab\r\n2.    csv\r\n3.    xml\r\n4.    json (default)"
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: The provided combination of parameters did not find a rating table.
        '501':
          description: Requested format is not implemented
    post:
      tags:
        - Ratings
      summary: Post cwmsData ratings
      description: Create new RatingSet
      operationId: postCwmsDataRatings
      requestBody:
        content:
          application/xml;version=2:
            schema:
              $ref: '#/components/schemas/Unit'
          application/json;version=2:
            schema:
              $ref: '#/components/schemas/Unit'
        required: true
      responses:
        '200':
          description: Default response
  /cwms-data/catalog/{dataSet}:
    get:
      tags:
        - Catalog-Beta
      summary: Get cwmsData catalog with dataset
      operationId: getCwmsDataCatalogWithDataset
      parameters:
        - name: dataSet
          in: path
          description: A list of what data? E.g. Timeseries, Locations, Ratings, etc
          required: true
          schema:
            $ref: '#/components/schemas/CatalogableEndpoint'
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are.
          schema:
            type: string
        - name: pageSize
          in: query
          description: How many entires per page returned. Default 500.
          schema:
            type: integer
            format: int32
        - name: unitSystem
          in: query
          description: Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to SI.
          schema:
            $ref: '#/components/schemas/UnitSystem'
        - name: office
          in: query
          description: 3-4 letter office name representing the district you want to isolate data to.
          schema:
            type: string
        - name: like
          in: query
          description: Posix regular expression matching against the id
          schema:
            type: string
        - name: timeseriesCategoryLike
          in: query
          description: Posix regular expression matching against the timeseries category id
          schema:
            type: string
        - name: timeseriesGroupLike
          in: query
          description: Posix regular expression matching against the timeseries group id
          schema:
            type: string
        - name: locationCategoryLike
          in: query
          description: Posix regular expression matching against the location category id
          schema:
            type: string
        - name: locationGroupLike
          in: query
          description: Posix regular expression matching against the location group id
          schema:
            type: string
      responses:
        '200':
          description: A list of elements the data set you've selected.
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Catalog'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalog'
  /cwms-data/basins/{basin-id}:
    get:
      tags:
        - Basins-Beta
      summary: Get cwmsData basins with basinId
      description: Returns CWMS Basin Data
      operationId: getCwmsDataBasinsWithBasinId
      parameters:
        - name: basin-id
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the basin whose data is to be included in the response. If this field is not specified, matching basin information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system. Basin values will be in the default English units for their parameters. (This is default if no value is entered)\r\n2. SI.   Specifies the SI unit system. Basin values will be in the default SI units for their parameters."
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/vnd.named+pg+json:
              schema:
                $ref: '#/components/schemas/Basin'
        '404':
          description: The provided combination of parameters did not find a basin.
        '501':
          description: Requested format is not implemented
  /cwms-data/basins:
    get:
      tags:
        - Basins-Beta
      summary: Get cwmsData basins
      description: Returns CWMS Basin Data
      operationId: getCwmsDataBasins
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the basin whose data is to be included in the response. If this field is not specified, matching basin information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system. Basin values will be in the default English units for their parameters. (This is default if no value is entered)\r\n2. SI.   Specifies the SI unit system. Basin values will be in the default SI units for their parameters."
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/vnd.named+pg+json:
              schema:
                $ref: '#/components/schemas/Basin'
        '404':
          description: The provided combination of parameters did not find a basin.
        '501':
          description: Requested format is not implemented
  /cwms-data/blobs/{blob-id}:
    get:
      tags:
        - Blob
      summary: Get cwmsData blobs with blobId
      operationId: getCwmsDataBlobsWithBlobId
      parameters:
        - name: blob-id
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office.
          schema:
            type: string
      responses:
        '200':
          description: Default response
  /cwms-data/blobs:
    get:
      tags:
        - Blob
      summary: Get cwmsData blobs
      operationId: getCwmsDataBlobs
      parameters:
        - name: office
          in: query
          description: Specifies the owning office. If this field is not specified, matching information from all offices shall be returned.
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: pageSize
          in: query
          description: How many entries per page returned. Default 20.
          schema:
            type: integer
            format: int32
        - name: like
          in: query
          description: Posix regular expression describing the blob id's you want
          schema:
            type: string
      responses:
        '200':
          description: A list of blobs.
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Blobs'
            application/xml;version=2:
              schema:
                $ref: '#/components/schemas/Blobs'
  /cwms-data/clobs/{clob-id}:
    get:
      tags:
        - Clob
      summary: Get cwmsData clobs with clobId
      operationId: getCwmsDataClobsWithClobId
      parameters:
        - name: clob-id
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office.
          schema:
            type: string
      responses:
        '200':
          description: Returns requested clob.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clob'
  /cwms-data/clobs:
    get:
      tags:
        - Clob
      summary: Get cwmsData clobs
      operationId: getCwmsDataClobs
      parameters:
        - name: office
          in: query
          description: Specifies the owning office. If this field is not specified, matching information from all offices shall be returned.
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: pageSize
          in: query
          description: How many entries per page returned. Default 20.
          schema:
            type: integer
            format: int32
        - name: includeValues
          in: query
          description: 'Do you want the value associated with this particular clob (default: false)'
          schema:
            type: boolean
        - name: like
          in: query
          description: Posix regular expression matching against the id
          schema:
            type: string
      responses:
        '200':
          description: A list of clobs.
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Clobs'
            application/xml;version=2:
              schema:
                $ref: '#/components/schemas/Clobs'
  /cwms-data/pools/{pool-id}:
    get:
      tags:
        - Pools
      summary: Get cwmsData pools with poolId
      description: Retrieves requested Pool
      operationId: getCwmsDataPoolsWithPoolId
      parameters:
        - name: pool-id
          in: path
          description: Specifies the pool whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the Pool whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: project-id
          in: query
          description: Specifies the project-id of the Pool whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: bottom-mask
          in: query
          description: Bottom level mask. Default value:*"
          schema:
            type: string
        - name: top-mask
          in: query
          description: Top level mask. Default value:*"
          schema:
            type: string
        - name: include-explicit
          in: query
          description: Specifies if the results should include explicit Pools. Default value:false"
          schema:
            type: string
        - name: include-implicit
          in: query
          description: Specifies if the results should include implicit Pools..Default value:true"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Pool'
        '404':
          description: Based on the combination of inputs provided the Location Category was not found.
        '501':
          description: request format is not implemented
  /cwms-data/pools:
    get:
      tags:
        - Pools
      summary: Get cwmsData pools
      description: Returns Pools Data
      operationId: getCwmsDataPools
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the data in the response. If this field is not specified, matching items from all offices shall be returned.
          schema:
            type: string
        - name: id-mask
          in: query
          description: Project Id mask. Default value:*
          schema:
            type: string
        - name: name-mask
          in: query
          description: Name mask. Default value:*"
          schema:
            type: string
        - name: bottom-mask
          in: query
          description: Bottom level mask. Default value:*"
          schema:
            type: string
        - name: top-mask
          in: query
          description: Top level mask. Default value:*"
          schema:
            type: string
        - name: include-explicit
          in: query
          description: Specifies if the results should include explicit Pools. Default value:false"
          schema:
            type: string
        - name: include-implicit
          in: query
          description: Specifies if the results should include implicit Pools..Default value:true"
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: pageSize
          in: query
          description: How many entries per page returned. Default 100.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Pools'
        '404':
          description: Based on the combination of inputs provided the pools were not found.
        '501':
          description: request format is not implemented
components:
  schemas:
    LocationCategory:
      type: object
      properties:
        officeId:
          type: string
        id:
          type: string
        description:
          type: string
      description: A representation of a location category
      xml:
        name: location_category
    AssignedLocation:
      type: object
      properties:
        locationId:
          type: string
        officeId:
          type: string
        aliasId:
          type: string
        attribute:
          type: number
        refLocationId:
          type: string
    LocationGroup:
      type: object
      properties:
        id:
          type: string
        locationCategory:
          $ref: '#/components/schemas/LocationCategory'
        officeId:
          type: string
        description:
          type: string
        sharedLocAliasId:
          type: string
        sharedRefLocationId:
          type: string
        locGroupAttribute:
          type: number
        assignedLocations:
          type: array
          items:
            $ref: '#/components/schemas/AssignedLocation'
      description: A representation of a location group
      xml:
        name: location_group
    LocationGroup_CSV:
      type: object
      description: Single LocationGroup or List of LocationGroups in comma separated format
      example: "#LocationGroup Id, OfficeId, Description, CategoryId, CategoryOfficeId, SharedLocAliasId, SharedRefLocationId, LocGroupAttribute\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
    CsvV1LocationGroup:
      type: object
      description: Single LocationGroup or List of LocationGroups in comma separated format
      example: "#LocationGroup Id, OfficeId, Description, CategoryId, CategoryOfficeId, SharedLocAliasId, SharedRefLocationId, LocGroupAttribute\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
    Unit:
      type: object
    Location:
      type: object
      properties:
        name:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        active:
          type: boolean
        public-name:
          type: string
        long-name:
          type: string
        description:
          type: string
        timezone-name:
          type: string
        location-type:
          type: string
        location-kind:
          type: string
        nation:
          type: string
          enum:
            - US
            - CANADA
            - MEXICO
        state-initial:
          type: string
        county-name:
          type: string
        nearest-city:
          type: string
        horizontal-datum:
          type: string
        published-longitude:
          type: number
          format: double
        published-latitude:
          type: number
          format: double
        vertical-datum:
          type: string
        elevation:
          type: number
          format: double
        map-label:
          type: string
        bounding-office-id:
          type: string
        office-id:
          type: string
    Office:
      type: object
      properties:
        name:
          type: string
        longName:
          type: string
          xml:
            name: long-name
        type:
          type: string
          enum:
            - unknown
            - corps headquarters
            - division headquarters
            - division regional
            - district
            - filed operating activity
        reportsTo:
          type: string
          description: Reference to another office, like a division, that this office reports to.
          xml:
            name: reports-to
      description: A representation of a CWMS office
      xml:
        name: office
    OfficeFormatV1:
      type: object
      properties:
        offices:
          $ref: '#/components/schemas/OfficesFMT'
    OfficesFMT:
      type: object
      properties:
        offices:
          type: array
          items:
            $ref: '#/components/schemas/Office'
    Office_Tabulation:
      type: object
      properties:
        Office:
          type: string
        longName:
          type: string
        officeType:
          type: string
        reportsToOffice:
          type: string
      description: Single Office or List of Offices in tab separated format
      example: "#Office Name<tab>Long Name<tab>Office Type<tab>Reports To Office\r\nCERL\tConstruction Engineering Research Laboratory\tField Operating Activity\tERD\r\nCHL\tCoastal and Hydraulics Laboratory\tField Operating Activity\tERD\r\nNAB\tBaltimore District\tDistrict\tNADNAD\tNorth Atlantic Division\tDivision Headquarters\tHQ"
    TabV1Office:
      type: object
      properties:
        Office:
          type: string
        longName:
          type: string
        officeType:
          type: string
        reportsToOffice:
          type: string
      description: Single Office or List of Offices in tab separated format
      example: "#Office Name<tab>Long Name<tab>Office Type<tab>Reports To Office\r\nCERL\tConstruction Engineering Research Laboratory\tField Operating Activity\tERD\r\nCHL\tCoastal and Hydraulics Laboratory\tField Operating Activity\tERD\r\nNAB\tBaltimore District\tDistrict\tNADNAD\tNorth Atlantic Division\tDivision Headquarters\tHQ"
    Office_CSV:
      type: object
      properties:
        Office:
          type: string
        longName:
          type: string
        officeType:
          type: string
        reportsToOffice:
          type: string
      description: Single Office or List of Offices in comma separated format
      example: "#Office Name,Long Name,Office Type,Reports To Office\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
    CsvV1Office:
      type: object
      properties:
        Office:
          type: string
        longName:
          type: string
        officeType:
          type: string
        reportsToOffice:
          type: string
      description: Single Office or List of Offices in comma separated format
      example: "#Office Name,Long Name,Office Type,Reports To Office\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
    LocationLevel:
      type: object
      properties:
        seasonal-time-series-id:
          type: string
        seasonal-values:
          type: array
          items:
            $ref: '#/components/schemas/SeasonalValueBean'
        specified-level-id:
          type: string
        parameter-type-id:
          type: string
        parameter-id:
          type: string
        si-parameter-units-constant-value:
          type: number
          format: double
        level-units-id:
          type: string
        level-date:
          type: string
          format: date-time
        level-comment:
          type: string
        interval-origin:
          type: string
          format: date-time
        interval-months:
          type: integer
          format: int32
        interval-minutes:
          type: integer
          format: int32
        interpolate-string:
          type: string
        duration-id:
          type: string
        attribute-value:
          type: number
        attribute-units-id:
          type: string
        attribute-parameter-type-id:
          type: string
        attribute-parameter-id:
          type: string
        attribute-duration-id:
          type: string
        attribute-comment:
          type: string
        location-id:
          type: string
        office-id:
          type: string
    SeasonalValueBean:
      type: object
      properties:
        value:
          type: number
          format: double
        offset-months:
          type: integer
          format: int32
        offset-minutes:
          type: integer
    TimeSeriesCategory:
      type: object
      properties:
        officeId:
          type: string
        id:
          type: string
        description:
          type: string
      description: A representation of a TimeSeries category
      xml:
        name: timeseries-category
    AssignedTimeSeries:
      type: object
      properties:
        timeseriesId:
          type: string
        tsCode:
          type: number
        aliasId:
          type: string
        refTsId:
          type: string
        attribute:
          type: integer
          format: int32
    TimeSeriesGroup:
      type: object
      properties:
        id:
          type: string
        timeSeriesCategory:
          $ref: '#/components/schemas/TimeSeriesCategory'
        officeId:
          type: string
        description:
          type: string
        sharedAliasId:
          type: string
        sharedRefTsId:
          type: string
        assignedTimeSeries:
          type: array
          items:
            $ref: '#/components/schemas/AssignedTimeSeries'
      description: A representation of a timeseries group
      xml:
        name: timeseries-group
    Offset:
      type: object
      properties:
        estimate:
          type: boolean
          xml:
            attribute: true
        toDatum:
          type: string
          xml:
            name: to-datum
        value:
          type: number
          format: double
    TimeSeries:
      type: object
      properties:
        begin:
          type: string
          description: The requested start time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')
          format: date-time
        end:
          type: string
          description: The requested end time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')
          format: date-time
        interval:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            negative:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                      negative:
                        type: boolean
                      nano:
                        type: integer
                        format: int32
                  durationEstimated:
                    type: boolean
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
            nano:
              type: integer
              format: int32
          description: The interval of the time-series, in ISO-8601 duration format
        name:
          type: string
          description: Time-series name
        nextPage:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          xml:
            name: next-page
        officeId:
          type: string
          description: Office ID that owns the time-series
          xml:
            name: office-id
        page:
          type: string
          description: The cursor to the current page of data
        pageSize:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          xml:
            name: page-size
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
        units:
          type: string
          description: The units of the time series data
        value-columns:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/TimeSeries.Column'
        values:
          type: object
          properties:
            date-time:
              type: integer
              description: Milliseconds since 1970-01-01 (Unix Epoch)
              format: int64
            value:
              type: number
              description: Requested time-series data value
              format: double
            quality-code:
              type: integer
              format: int32
          description: A representation of a time-series record
          xml:
            wrapped: true
        verticalDatumInfo:
          $ref: '#/components/schemas/VerticalDatumInfo'
      xml:
        name: timeseries
    TimeSeries.Column:
      type: object
      properties:
        name:
          type: string
        ordinal:
          type: integer
          format: int32
        datatype:
          type: string
      readOnly: true
    TimeSeries.Record:
      type: object
      properties:
        date-time:
          type: integer
          description: Milliseconds since 1970-01-01 (Unix Epoch)
          format: int64
        value:
          type: number
          description: Requested time-series data value
          format: double
        quality-code:
          type: integer
          format: int32
      description: A representation of a time-series record
    VerticalDatumInfo:
      type: object
      properties:
        office:
          type: string
          xml:
            attribute: true
        unit:
          type: string
          xml:
            attribute: true
        location:
          type: string
        native-datum:
          type: string
        elevation:
          type: number
          format: double
        offsets:
          type: array
          xml:
            name: offset
          items:
            $ref: '#/components/schemas/Offset'
      xml:
        name: vertical-datum-info
    CatalogableEndpoint:
      type: string
      description: Set of data for which a larger catalog can be built.
      enum:
        - TIMESERIES
        - LOCATIONS
    UnitSystem:
      type: string
      description: Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to SI.
      enum:
        - SI
        - EN
    Catalog:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
        nextPage:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          xml:
            name: next-page
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
        pageSize:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          xml:
            name: page-size
        entries:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CatalogEntry'
      xml:
        name: catalog
    CatalogEntry:
      type: object
      properties:
        office:
          type: string
          xml:
            attribute: true
      xml:
        name: entry
      oneOf:
        - $ref: '#/components/schemas/LocationCatalogEntry'
        - $ref: '#/components/schemas/TimeseriesCatalogEntry'
    LocationAlias:
      type: object
      properties:
        name:
          type: string
          xml:
            attribute: true
        value:
          type: string
      xml:
        name: alias
    LocationCatalogEntry:
      type: object
      properties:
        office:
          type: string
          xml:
            attribute: true
        name:
          type: string
        nearestCity:
          type: string
        publicName:
          type: string
        longName:
          type: string
        description:
          type: string
        kind:
          type: string
        type:
          type: string
        timeZone:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        publishedLatitude:
          type: number
          format: double
        publishedLongitude:
          type: number
          format: double
        horizontalDatum:
          type: string
        elevation:
          type: number
          format: double
        unit:
          type: string
        verticalDatum:
          type: string
        nation:
          type: string
        state:
          type: string
        county:
          type: string
        boundingOffice:
          type: string
        mapLabel:
          type: string
        active:
          type: boolean
        aliases:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/LocationAlias'
      xml:
        name: entry
    TimeSeriesExtents:
      type: object
      properties:
        earliestTime:
          type: string
          description: Earliest value in the timeseries
          format: date-time
          xml:
            name: earliest-time
        latestTime:
          type: string
          description: Latest value in the timeseries
          format: date-time
          xml:
            name: latest-time
        versionTime:
          type: string
          description: TimeSeries version to which this extent information applies
          format: date-time
      description: TimeSeries extent information
      xml:
        name: extents
    TimeseriesCatalogEntry:
      type: object
      properties:
        office:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        units:
          type: string
        interval:
          type: string
        intervalOffset:
          type: integer
          description: Offset from top of interval
          format: int64
          xml:
            name: interval-offset
        timeZone:
          type: string
          description: Only on 21.1.1 Database. The timezone the Interval Offset is from.
          xml:
            name: time-zone
        extents:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TimeSeriesExtents'
      xml:
        name: entry
    Basin:
      type: object
      properties:
        basinName:
          type: string
        officeId:
          type: string
        primaryStream:
          $ref: '#/components/schemas/Stream'
        sortOrder:
          type: number
          format: double
        basinArea:
          type: number
          format: double
        contributingArea:
          type: number
          format: double
        parentBasinId:
          type: string
    Stream:
      type: object
      properties:
        streamName:
          type: string
        tributaries:
          type: array
          items:
            $ref: '#/components/schemas/Stream'
        streamReaches:
          type: array
          items:
            $ref: '#/components/schemas/StreamReach'
        divertingStreamId:
          type: string
        receivingStreamId:
          type: string
        confluenceBank:
          type: string
        diversionBank:
          type: string
        streamLength:
          type: number
          format: double
        confluenceStation:
          type: number
          format: double
        diversionStation:
          type: number
          format: double
        streamLocations:
          type: array
          items:
            $ref: '#/components/schemas/StreamLocation'
        officeId:
          type: string
        comment:
          type: string
        averageSlope:
          type: number
          format: double
    StreamLocation:
      type: object
      properties:
        locationName:
          type: string
        streamName:
          type: string
        station:
          type: number
          format: double
        bank:
          type: string
        officeId:
          type: string
        publishedStation:
          type: number
          format: double
        lowestMeasurableStage:
          type: number
          format: double
        totalDrainageArea:
          type: number
          format: double
        ungagedDrainageArea:
          type: number
          format: double
        nagivationStation:
          type: number
          format: double
    StreamReach:
      type: object
      properties:
        upstreamLocationName:
          type: string
        downstreamLocationName:
          type: string
        streamName:
          type: string
        reachName:
          type: string
        officeId:
          type: string
        comment:
          type: string
        configuration:
          type: string
    Blob:
      type: object
      properties:
        office:
          type: string
        id:
          type: string
        description:
          type: string
        mediaTypeId:
          type: string
        value:
          type: array
          items:
            type: string
            format: byte
      description: List of retrieved blobs
    Blobs:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
        nextPage:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          xml:
            name: next-page
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
        pageSize:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          xml:
            name: page-size
        blobs:
          type: object
          properties:
            office:
              type: string
            id:
              type: string
            description:
              type: string
            mediaTypeId:
              type: string
            value:
              type: array
              items:
                type: string
                format: byte
          description: List of retrieved blobs
          xml:
            wrapped: true
      xml:
        name: blobs
    Clob:
      type: object
      properties:
        office:
          type: string
        id:
          type: string
        description:
          type: string
        value:
          type: string
      description: List of retrieved clobs
      xml:
        name: clob
    Clobs:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
        nextPage:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          xml:
            name: next-page
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
        pageSize:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          xml:
            name: page-size
        clobs:
          type: object
          properties:
            office:
              type: string
            id:
              type: string
            description:
              type: string
            value:
              type: string
          description: List of retrieved clobs
          xml:
            name: clob
            wrapped: true
      xml:
        name: clobs
    Pool:
      type: object
      properties:
        attribute:
          type: number
        description:
          type: string
        clobText:
          type: string
        implicit:
          type: boolean
        poolName:
          $ref: '#/components/schemas/PoolNameType'
        projectId:
          type: string
        bottomLevelId:
          type: string
        topLevelId:
          type: string
      description: List of retrieved pools
    PoolNameType:
      type: object
      properties:
        poolName:
          type: string
        officeId:
          type: string
    Pools:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
        nextPage:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          xml:
            name: next-page
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
        pageSize:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          xml:
            name: page-size
        pools:
          type: object
          properties:
            attribute:
              type: number
            description:
              type: string
            clobText:
              type: string
            implicit:
              type: boolean
            poolName:
              $ref: '#/components/schemas/PoolNameType'
            projectId:
              type: string
            bottomLevelId:
              type: string
            topLevelId:
              type: string
          description: List of retrieved pools
          xml:
            wrapped: true
      xml:
        name: pools
