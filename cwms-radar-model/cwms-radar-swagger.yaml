openapi: 3.0.1
info:
  title: CWMS Radar
  description: CWMS REST API for Data Retrieval
  version: '2.0'
paths:
  /cwms-data:
    get:
      summary: Get cwmsData
      operationId: getCwmsData
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/location/category/{category-id}:
    get:
      tags:
        - Location Categories-Beta
      summary: Get cwmsData location category with categoryId
      description: Retrieves requested Location Category
      operationId: getCwmsDataLocationCategoryWithCategoryId
      parameters:
        - name: category-id
          in: path
          description: Specifies the Category whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the Location Category whose data is to be included in the response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCategory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/location/category:
    get:
      tags:
        - Location Categories-Beta
      summary: Get cwmsData location category
      description: Returns CWMS Location Category Data
      operationId: getCwmsDataLocationCategory
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the location category(ies) whose data is to be included in the response. If this field is not specified, matching location category information from all offices shall be returned.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationCategory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/location/group/{group-id}:
    get:
      tags:
        - Location Groups-Beta
      summary: Get cwmsData location group with groupId
      description: Retrieves requested Location Group
      operationId: getCwmsDataLocationGroupWithGroupId
      parameters:
        - name: group-id
          in: path
          description: Specifies the location_group whose data is to be included in the response
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location group whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: category-id
          in: query
          description: Specifies the category containing the location group whose data is to be included in the response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationGroup'
            text/csv:
              schema:
                $ref: '#/components/schemas/CsvV1LocationGroup'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/location/group:
    get:
      tags:
        - Location Groups-Beta
      summary: Get cwmsData location group
      description: Returns CWMS Location Groups Data
      operationId: getCwmsDataLocationGroup
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the location group(s) whose data is to be included in the response. If this field is not specified, matching location groups information from all offices shall be returned.
          schema:
            type: string
        - name: include-assigned
          in: query
          description: 'Include the assigned locations in the returned location groups. (default: false)'
          schema:
            type: boolean
        - name: includeAssigned
          in: query
          description: Deprecated. Use include-assigned instead.
          deprecated: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationGroup'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CsvV1LocationGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/locations/{location-id}:
    get:
      tags:
        - Locations
      summary: Get cwmsData locations with locationId
      description: Returns CWMS Location Data
      operationId: getCwmsDataLocationsWithLocationId
      parameters:
        - name: location-id
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
          required: true
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system.  Location values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Location values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Location'
            application/xml;version=2:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
    delete:
      tags:
        - Locations
      summary: Delete cwmsData locations with locationId
      description: Delete CWMS Location
      operationId: deleteCwmsDataLocationsWithLocationId
      parameters:
        - name: location-id
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location whose data is to be deleted. If this field is not specified, matching location information will be deleted from all offices.
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
    patch:
      tags:
        - Locations
      summary: Patch cwmsData locations with locationId
      description: Update CWMS Location
      operationId: patchCwmsDataLocationsWithLocationId
      parameters:
        - name: location-id
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the office in which Location will be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/xml:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/locations:
    get:
      tags:
        - Locations
      summary: Get cwmsData locations
      description: Returns CWMS Location Data
      operationId: getCwmsDataLocations
      parameters:
        - name: names
          in: query
          description: Specifies the name(s) of the location(s) whose data is to be included in the response
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system.  Location level values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
        - name: datum
          in: query
          description: "Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:\r\n1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.\r\n2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum."
          schema:
            type: string
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid values for the format field for this URI are:\r\n1.    tab\r\n2.    csv\r\n3.    xml\r\n4.  wml2 (only if name field is specified)\r\n5.    json (default)\n6.    geojson"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/tab-separated-values:
              schema:
                type: string
            text/csv:
              schema:
                type: string
            application/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            application/vnd.opengis.waterml+xml:
              schema:
                $ref: '#/components/schemas/Unit'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
    post:
      tags:
        - Locations
      summary: Post cwmsData locations
      description: Create new CWMS Location
      operationId: postCwmsDataLocations
      parameters:
        - name: office
          in: query
          description: Specifies the office in which Location will be created
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/xml:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/offices/{office}:
    get:
      tags:
        - Offices
      summary: Get cwmsData offices with office
      operationId: getCwmsDataOfficesWithOffice
      parameters:
        - name: office
          in: path
          description: The 3 letter office ID you want more information for
          required: true
          schema:
            type: string
        - name: format
          in: query
          description: "(Deprecated in favor of Accept header) Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          deprecated: true
          schema:
            type: string
      responses:
        '200':
          description: A list of offices.
          content:
            '':
              schema:
                $ref: '#/components/schemas/OfficeFormatV1'
            application/json;version=2:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Office'
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeFormatV1'
            text/tab-separated-values:
              schema:
                $ref: '#/components/schemas/TabV1Office'
            text/csv:
              schema:
                $ref: '#/components/schemas/CsvV1Office'
            application/xml:
              schema:
                $ref: '#/components/schemas/CsvV1Office'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/offices:
    get:
      tags:
        - Offices
      summary: Get cwmsData offices
      operationId: getCwmsDataOffices
      parameters:
        - name: format
          in: query
          description: "(Deprecated in favor of Accept header) Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          deprecated: true
          schema:
            type: string
      responses:
        '200':
          description: A list of offices.
          content:
            '':
              schema:
                $ref: '#/components/schemas/OfficeFormatV1'
            application/json;version=2:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Office'
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeFormatV1'
            text/tab-separated-values:
              schema:
                $ref: '#/components/schemas/TabV1Office'
            text/csv:
              schema:
                $ref: '#/components/schemas/CsvV1Office'
            application/xml:
              schema:
                $ref: '#/components/schemas/CsvV1Office'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/units:
    get:
      tags:
        - Units
      summary: Get cwmsData units
      operationId: getCwmsDataUnits
      parameters:
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: The format requested is not implemented
  /cwms-data/parameters:
    get:
      tags:
        - Parameters
      summary: Get cwmsData parameters
      operationId: getCwmsDataParameters
      parameters:
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/timezones:
    get:
      tags:
        - TimeZones
      summary: Get cwmsData timezones
      operationId: getCwmsDataTimezones
      parameters:
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n1. tab\r\n2. csv\r\n 3. xml\r\n4. json (default)"
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: The format requested is not implemented
  /cwms-data/levels/{level-id}:
    get:
      tags:
        - Levels
      summary: Get cwmsData levels with levelId
      description: Retrieves requested Location Level
      operationId: getCwmsDataLevelsWithLevelId
      parameters:
        - name: level-id
          in: path
          description: Specifies the requested location level.
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the office of the Location Level to be returned
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: Deprecated, use effective-date
          deprecated: true
          schema:
            type: string
        - name: effective-date
          in: query
          description: Specifies the effective date of Location Level to be returned
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/LocationLevel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
    delete:
      tags:
        - Levels
      summary: Delete cwmsData levels with levelId
      description: Delete CWMS Location Level
      operationId: deleteCwmsDataLevelsWithLevelId
      parameters:
        - name: level-id
          in: path
          description: Specifies the location level id of the Location Level to be deleted
          required: true
          schema:
            type: string
        - name: cascade-delete
          in: query
          schema:
            type: boolean
        - name: office
          in: query
          description: Specifies the owning office of the location level whose data is to be deleted. If this field is not specified, matching location level information will be deleted from all offices.
          schema:
            type: string
        - name: date
          in: query
          description: Deprecated, use effective-date
          deprecated: true
          schema:
            type: string
        - name: effective-date
          in: query
          description: Specifies the effective date of the level to be deleted. If not provided will delete all data and reference to the location level.
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
    patch:
      tags:
        - Levels
      summary: Patch cwmsData levels with levelId
      description: Update CWMS Location Level
      operationId: patchCwmsDataLevelsWithLevelId
      parameters:
        - name: level-id
          in: path
          description: Specifies the location level id of the Location Level to be updated
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the office in which Location Level will be updated
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: Deprecated, use effective-date
          deprecated: true
          schema:
            type: string
        - name: effective-date
          in: query
          description: Specifies the effective date of Location Level that will be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/LocationLevel'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/levels:
    get:
      tags:
        - Levels
      summary: Get cwmsData levels
      operationId: getCwmsDataLevels
      parameters:
        - name: name
          in: query
          description: 'Deprecated, use level-id-mask. '
          deprecated: true
          schema:
            type: string
        - name: level-id-mask
          in: query
          description: Specifies the name(s) of the location level(s) whose data is to be included in the response. Uses * for all.
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system.  Location level values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
        - name: datum
          in: query
          description: "Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:\r\n1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.\r\n2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum."
          schema:
            type: string
        - name: begin
          in: query
          description: Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time.
          schema:
            type: string
        - name: end
          in: query
          description: Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time
          schema:
            type: string
        - name: timezone
          in: query
          description: Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.
          schema:
            type: string
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Requests specifying an Accept header:application/json;version=2 must not include this field. Valid format field values for this URI are:\r\n1.    tab\r\n2.    csv\r\n3.    xml\r\n4.    wml2 (only if name field is specified)\r\n5.    json (default)\r\n"
          schema:
            type: string
        - name: page
          in: query
          description: This identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: page-size
          in: query
          description: How many entries per page returned. Default 100.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/LocationLevels'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
    post:
      tags:
        - Levels
      summary: Post cwmsData levels
      description: Create new CWMS Location Level
      operationId: postCwmsDataLevels
      parameters:
        - name: office
          in: query
          description: Specifies the office in which Location Level will be created
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/LocationLevel'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/timeseries/recent/{group-id}:
    get:
      summary: Get cwmsData timeseries recent with groupId
      operationId: getCwmsDataTimeseriesRecentWithGroupId
      parameters:
        - name: group-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/timeseries/category/{category-id}:
    get:
      tags:
        - TimeSeries Categories-Beta
      summary: Get cwmsData timeseries category with categoryId
      description: Retrieves requested timeseries category
      operationId: getCwmsDataTimeseriesCategoryWithCategoryId
      parameters:
        - name: category-id
          in: path
          description: Specifies the Category whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the timeseries category whose data is to be included in the response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesCategory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Based on the combination of inputs provided the timeseries category was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: request format is not implemented
  /cwms-data/timeseries/category:
    get:
      tags:
        - TimeSeries Categories-Beta
      summary: Get cwmsData timeseries category
      description: Returns CWMS timeseries category Data
      operationId: getCwmsDataTimeseriesCategory
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the timeseries category(ies) whose data is to be included in the response. If this field is not specified, matching timeseries category information from all offices shall be returned.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSeriesCategory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Based on the combination of inputs provided the categories were not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: request format is not implemented
  /cwms-data/timeseries/group/{group-id}:
    get:
      tags:
        - Timeseries Groups
      summary: Get cwmsData timeseries group with groupId
      description: Retrieves requested timeseries group
      operationId: getCwmsDataTimeseriesGroupWithGroupId
      parameters:
        - name: group-id
          in: path
          description: Specifies the timeseries group whose data is to be included in the response
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the timeseries group whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: category-id
          in: query
          description: Specifies the category containing the timeseries group whose data is to be included in the response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/timeseries/group:
    get:
      tags:
        - Timeseries Groups-Beta
      summary: Get cwmsData timeseries group
      description: Returns CWMS Timeseries Groups Data
      operationId: getCwmsDataTimeseriesGroup
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the timeseries group(s) whose data is to be included in the response. If this field is not specified, matching timeseries groups information from all offices shall be returned.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSeriesGroup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Based on the combination of inputs provided the timeseries group(s) were not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: request format is not implemented
  /cwms-data/timeseries:
    get:
      tags:
        - TimeSeries
      summary: Get cwmsData timeseries
      operationId: getCwmsDataTimeseries
      parameters:
        - name: name
          in: query
          description: Specifies the name(s) of the time series whose data is to be included in the response. A case insensitive comparison is used to match names.
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the time series(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   (default) Specifies English unit system.  Location level values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
        - name: datum
          in: query
          description: "Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:\r\n1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.\r\n2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum."
          schema:
            type: string
        - name: begin
          in: query
          description: Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-0700[PST8PDT]'.
          schema:
            type: string
        - name: end
          in: query
          description: Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time. The format for this field is ISO 8601 extended, with optional timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-0700[PST8PDT]'.
          schema:
            type: string
        - name: timezone
          in: query
          description: "Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.\r\nIgnored if begin was specified with offset and timezone."
          schema:
            type: string
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid values for the format field for this URI are:\r\n1.    tab\r\n2.    csv\r\n3.    xml\r\n4.  wml2 (only if name field is specified)\r\n5.    json (default)"
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: cursor
          in: query
          description: Deprecated. Use 'page' instead.
          deprecated: true
          schema:
            type: string
        - name: page-size
          in: query
          description: How many entries per page returned. Default 500.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Deprecated. Please use page-size instead.
          deprecated: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A list of elements of the data set you've selected.
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/TimeSeries'
            application/xml:
              schema:
                $ref: '#/components/schemas/TimeSeries'
        '400':
          description: Invalid parameter combination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: The provided combination of parameters did not find a timeseries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: Requested format is not implemented
    post:
      tags:
        - TimeSeries
      summary: Post cwmsData timeseries
      description: Create new TimeSeries, will store any data provided
      operationId: postCwmsDataTimeseries
      requestBody:
        content:
          application/json;version=2:
            schema:
              $ref: '#/components/schemas/TimeSeries'
          application/xml;version=2:
            schema:
              $ref: '#/components/schemas/TimeSeries'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/timeseries/{timeseries}:
    delete:
      tags:
        - TimeSeries
      summary: Delete cwmsData timeseries with timeseries
      operationId: deleteCwmsDataTimeseriesWithTimeseries
      parameters:
        - name: timeseries
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the timeseries to be deleted.
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
    patch:
      tags:
        - TimeSeries
      summary: Patch cwmsData timeseries with timeseries
      description: Update a TimeSeries with provided values
      operationId: patchCwmsDataTimeseriesWithTimeseries
      parameters:
        - name: timeseries
          in: path
          description: Full CWMS Timeseries name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json;version=2:
            schema:
              $ref: '#/components/schemas/TimeSeries'
          application/xml;version=2:
            schema:
              $ref: '#/components/schemas/TimeSeries'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/ratings/template/{template-id}:
    get:
      tags:
        - Ratings
      summary: Get cwmsData ratings template with templateId
      operationId: getCwmsDataRatingsTemplateWithTemplateId
      parameters:
        - name: template-id
          in: path
          description: Specifies the template whose data is to be included in the response
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the Rating Templates whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RatingTemplate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/ratings/template:
    get:
      tags:
        - Ratings
      summary: Get cwmsData ratings template
      operationId: getCwmsDataRatingsTemplate
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the Rating Templates whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.
          schema:
            type: string
        - name: template-id-mask
          in: query
          description: RegExp that specifies the rating template IDs to be included in the response. If this field is not specified, all rating templates shall be returned.
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: page-size
          in: query
          description: How many entries per page returned. Default 100.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/RatingTemplates'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/ratings/spec/{rating-id}:
    get:
      tags:
        - Ratings
      summary: Get cwmsData ratings spec with ratingId
      operationId: getCwmsDataRatingsSpecWithRatingId
      parameters:
        - name: rating-id
          in: path
          description: Specifies the rating-id of the Rating Spec to be included in the response
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the Rating Specs whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/RatingSpec'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/ratings/spec:
    get:
      tags:
        - Ratings
      summary: Get cwmsData ratings spec
      operationId: getCwmsDataRatingsSpec
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the Rating Specs whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.
          schema:
            type: string
        - name: rating-id-mask
          in: query
          description: RegExp that specifies the rating IDs to be included in the response. If this field is not specified, all Rating Specs shall be returned.
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: page-size
          in: query
          description: How many entries per page returned. Default 100.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/RatingSpecs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/ratings/metadata:
    get:
      tags:
        - Ratings
      summary: Get cwmsData ratings metadata
      operationId: getCwmsDataRatingsMetadata
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the Rating Specs whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.
          schema:
            type: string
        - name: rating-id-mask
          in: query
          description: RegExp that specifies the rating IDs to be included in the response. If this field is not specified, all Rating Specs shall be returned.
          schema:
            type: string
        - name: start
          in: query
          description: Specifies the start of the time window of the effective dates to be included. If this field is not specified no start time will be used.
          schema:
            type: string
        - name: end
          in: query
          description: Specifies the end of the time window for effective dates to be included. If this field is not specified no end time will be used.
          schema:
            type: string
        - name: timezone
          in: query
          description: Specifies the time zone of the values of the begin and end fields (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: page-size
          in: query
          description: How many entries per page returned. Default 50.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/RatingMetadataList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/ratings/{rating}:
    get:
      tags:
        - Ratings
      summary: Get cwmsData ratings with rating
      description: Returns CWMS Rating Data
      operationId: getCwmsDataRatingsWithRating
      parameters:
        - name: rating
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the ratingset to be included in the response.
          required: true
          schema:
            type: string
        - name: begin
          in: query
          description: Specifies the start of the time window for data to be included in the response. If this field is not specified no start time will be used.
          schema:
            type: string
        - name: end
          in: query
          description: Specifies the end of the time window for data to be included in the response. If this field is not specified no end time will be used.
          schema:
            type: string
        - name: timezone
          in: query
          description: Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.
          schema:
            type: string
        - name: method
          in: query
          description: Specifies the retrieval method used.  If no method is provided EAGER will be used.
          schema:
            $ref: '#/components/schemas/DatabaseLoadMethod'
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Unit'
            application/xml;version=2:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
    delete:
      tags:
        - Ratings
      summary: Delete cwmsData ratings with rating
      operationId: deleteCwmsDataRatingsWithRating
      parameters:
        - name: rating
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the rating to be deleted.
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
    patch:
      tags:
        - Ratings
      summary: Patch cwmsData ratings with rating
      description: Update a RatingSet
      operationId: patchCwmsDataRatingsWithRating
      parameters:
        - name: rating
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/xml;version=2:
            schema:
              $ref: '#/components/schemas/Unit'
          application/json;version=2:
            schema:
              $ref: '#/components/schemas/Unit'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/ratings:
    get:
      tags:
        - Ratings
      summary: Get cwmsData ratings
      operationId: getCwmsDataRatings
      parameters:
        - name: name
          in: query
          description: Specifies the name(s) of the rating whose data is to be included in the response. A case insensitive comparison is used to match names.
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the Rating(s) whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n1. EN.   Specifies English unit system.  Rating values will be in the default English units for their parameters.\r\n2. SI.   Specifies the SI unit system.  Rating values will be in the default SI units for their parameters.\r\n3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters."
          schema:
            type: string
        - name: datum
          in: query
          description: "Specifies the elevation datum of the response. This field affects only elevation Ratings. Valid values for this field are:\r\n1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.\r\n2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum."
          schema:
            type: string
        - name: at
          in: query
          description: Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time.
          schema:
            type: string
        - name: end
          in: query
          description: Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time
          schema:
            type: string
        - name: timezone
          in: query
          description: Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.
          schema:
            type: string
        - name: format
          in: query
          description: "Specifies the encoding format of the response. Valid values for the format field for this URI are:\r\n1.    tab\r\n2.    csv\r\n3.    xml\r\n4.    json (default)"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            application/xml:
              schema:
                $ref: '#/components/schemas/Unit'
            text/tab-separated-values:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: The provided combination of parameters did not find a rating table.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: Requested format is not implemented
    post:
      tags:
        - Ratings
      summary: Post cwmsData ratings
      description: Create new RatingSet
      operationId: postCwmsDataRatings
      requestBody:
        content:
          application/xml;version=2:
            schema:
              $ref: '#/components/schemas/Unit'
          application/json;version=2:
            schema:
              $ref: '#/components/schemas/Unit'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/catalog/{dataset}:
    get:
      tags:
        - Catalog-Beta
      summary: Get cwmsData catalog with dataset
      operationId: getCwmsDataCatalogWithDataset
      parameters:
        - name: dataset
          in: path
          description: A list of what data? E.g. Timeseries, Locations, Ratings, etc
          required: true
          schema:
            $ref: '#/components/schemas/CatalogableEndpoint'
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are.
          schema:
            type: string
        - name: cursor
          in: query
          description: Deprecated. Use 'page' instead.
          deprecated: true
          schema:
            type: string
        - name: page-size
          in: query
          description: How many entires per page returned. Default 500.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Deprecated. Use page-size.
          deprecated: true
          schema:
            type: integer
            format: int32
        - name: unitSystem
          in: query
          description: Deprecated. Use unit-system.
          deprecated: true
          schema:
            $ref: '#/components/schemas/UnitSystem'
        - name: unit-system
          in: query
          description: Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to SI.
          schema:
            $ref: '#/components/schemas/UnitSystem'
        - name: office
          in: query
          description: 3-4 letter office name representing the district you want to isolate data to.
          schema:
            type: string
        - name: like
          in: query
          description: Posix regular expression matching against the id
          schema:
            type: string
        - name: timeseries-category-like
          in: query
          description: Posix regular expression matching against the timeseries category id
          schema:
            type: string
        - name: timeseriesCategoryLike
          in: query
          description: Deprecated. Use timeseries-category-like.
          deprecated: true
          schema:
            type: string
        - name: timeseries-group-like
          in: query
          description: Posix regular expression matching against the timeseries group id
          schema:
            type: string
        - name: timeseriesGroupLike
          in: query
          description: Deprecated. Use timeseries-group-like.
          deprecated: true
          schema:
            type: string
        - name: location-category-like
          in: query
          description: Posix regular expression matching against the location category id
          schema:
            type: string
        - name: locationCategoryLike
          in: query
          description: Deprecated. Use location-category-like.
          deprecated: true
          schema:
            type: string
        - name: location-group-like
          in: query
          description: Posix regular expression matching against the location group id
          schema:
            type: string
        - name: locationGroupLike
          in: query
          description: Deprecated. Use location-group-like.
          deprecated: true
          schema:
            type: string
      responses:
        '200':
          description: A list of elements the data set you've selected.
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Catalog'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalog'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/basins/{basin-id}:
    get:
      tags:
        - Basins-Beta
      summary: Get cwmsData basins with basinId
      description: Returns CWMS Basin Data
      operationId: getCwmsDataBasinsWithBasinId
      parameters:
        - name: basin-id
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the basin whose data is to be included in the response. If this field is not specified, matching basin information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system. Basin values will be in the default English units for their parameters. (This is default if no value is entered)\r\n2. SI.   Specifies the SI unit system. Basin values will be in the default SI units for their parameters."
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/vnd.named+pg+json:
              schema:
                $ref: '#/components/schemas/Basin'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: The provided combination of parameters did not find a basin.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: Requested format is not implemented
  /cwms-data/basins:
    get:
      tags:
        - Basins-Beta
      summary: Get cwmsData basins
      description: Returns CWMS Basin Data
      operationId: getCwmsDataBasins
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the basin whose data is to be included in the response. If this field is not specified, matching basin information from all offices shall be returned.
          schema:
            type: string
        - name: unit
          in: query
          description: "Specifies the unit or unit system of the response. Valid values for the unit field are:\r\n 1. EN.   Specifies English unit system. Basin values will be in the default English units for their parameters. (This is default if no value is entered)\r\n2. SI.   Specifies the SI unit system. Basin values will be in the default SI units for their parameters."
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/vnd.named+pg+json:
              schema:
                $ref: '#/components/schemas/Basin'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: The provided combination of parameters did not find a basin.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: Requested format is not implemented
  /cwms-data/blobs/{blob-id}:
    get:
      tags:
        - Blob
      summary: Get cwmsData blobs with blobId
      operationId: getCwmsDataBlobsWithBlobId
      parameters:
        - name: blob-id
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office.
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/blobs:
    get:
      tags:
        - Blob
      summary: Get cwmsData blobs
      operationId: getCwmsDataBlobs
      parameters:
        - name: office
          in: query
          description: Specifies the owning office. If this field is not specified, matching information from all offices shall be returned.
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: cursor
          in: query
          description: Deprecated. Use 'page' instead.
          deprecated: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: Deprecated.  Use page-size instead.
          deprecated: true
          schema:
            type: integer
            format: int32
        - name: page-size
          in: query
          description: How many entries per page returned. Default 20.
          schema:
            type: integer
            format: int32
        - name: like
          in: query
          description: Posix regular expression describing the blob id's you want
          schema:
            type: string
      responses:
        '200':
          description: A list of blobs.
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Blobs'
            application/xml;version=2:
              schema:
                $ref: '#/components/schemas/Blobs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/clobs/{clob-id}:
    get:
      tags:
        - Clob
      summary: Get cwmsData clobs with clobId
      operationId: getCwmsDataClobsWithClobId
      parameters:
        - name: clob-id
          in: path
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office.
          schema:
            type: string
      responses:
        '200':
          description: Returns requested clob.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clob'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/clobs:
    get:
      tags:
        - Clob
      summary: Get cwmsData clobs
      operationId: getCwmsDataClobs
      parameters:
        - name: office
          in: query
          description: Specifies the owning office. If this field is not specified, matching information from all offices shall be returned.
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: cursor
          in: query
          description: Deprecated. Use 'page' instead.
          deprecated: true
          schema:
            type: string
        - name: page-size
          in: query
          description: How many entries per page returned. Default 20.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Deprecated, use 'page-size' instead.
          deprecated: true
          schema:
            type: integer
            format: int32
        - name: include-values
          in: query
          description: 'Do you want the value associated with this particular clob (default: false)'
          schema:
            type: boolean
        - name: includeValues
          in: query
          description: Deprecated, use 'include-values' instead.
          deprecated: true
          schema:
            type: boolean
        - name: like
          in: query
          description: Posix regular expression matching against the id
          schema:
            type: string
      responses:
        '200':
          description: A list of clobs.
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Clobs'
            application/xml;version=2:
              schema:
                $ref: '#/components/schemas/Clobs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
  /cwms-data/pools/{pool-id}:
    get:
      tags:
        - Pools
      summary: Get cwmsData pools with poolId
      description: Retrieves requested Pool
      operationId: getCwmsDataPoolsWithPoolId
      parameters:
        - name: pool-id
          in: path
          description: Specifies the pool whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: office
          in: query
          description: Specifies the owning office of the Pool whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: project-id
          in: query
          description: Specifies the project-id of the Pool whose data is to be included in the response.
          required: true
          schema:
            type: string
        - name: bottom-mask
          in: query
          description: Bottom level mask. Default value:*
          schema:
            type: string
        - name: top-mask
          in: query
          description: Top level mask. Default value:*
          schema:
            type: string
        - name: include-explicit
          in: query
          description: Specifies if the results should include explicit Pools. Default value:false
          schema:
            type: string
        - name: include-implicit
          in: query
          description: Specifies if the results should include implicit Pools. Default value:true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Pool'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Based on the combination of inputs provided the Location Category was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: request format is not implemented
  /cwms-data/pools:
    get:
      tags:
        - Pools
      summary: Get cwmsData pools
      description: Returns Pools Data
      operationId: getCwmsDataPools
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the data in the response. If this field is not specified, matching items from all offices shall be returned.
          schema:
            type: string
        - name: id-mask
          in: query
          description: Project Id mask. Default value:*
          schema:
            type: string
        - name: name-mask
          in: query
          description: Name mask. Default value:*
          schema:
            type: string
        - name: bottom-mask
          in: query
          description: Bottom level mask. Default value:*
          schema:
            type: string
        - name: top-mask
          in: query
          description: Top level mask. Default value:*
          schema:
            type: string
        - name: include-explicit
          in: query
          description: Specifies if the results should include explicit Pools. Default value:false
          schema:
            type: string
        - name: include-implicit
          in: query
          description: Specifies if the results should include implicit Pools. Default value:true
          schema:
            type: string
        - name: page
          in: query
          description: This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
          schema:
            type: string
        - name: cursor
          in: query
          description: Deprecated. Use 'page' instead.
          deprecated: true
          schema:
            type: string
        - name: page-size
          in: query
          description: How many entries per page returned. Default 100.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Deprecated. Use 'page-size' instead.
          deprecated: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/Pools'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Based on the combination of inputs provided the pools were not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '501':
          description: request format is not implemented
  /cwms-data/specified-levels:
    get:
      tags:
        - Specified Levels
      summary: Get cwmsData specifiedLevels
      operationId: getCwmsDataSpecifiedLevels
      parameters:
        - name: office
          in: query
          description: Specifies the owning office of the Specified Levels whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.
          schema:
            type: string
        - name: template-id-mask
          in: query
          description: Mask that specifies the IDs to be included in the response. If this field is not specified, all specified levels shall be returned.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;version=2:
              schema:
                $ref: '#/components/schemas/SpecifiedLevel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadarError'
components:
  schemas:
    RadarError:
      type: object
      properties:
        message:
          type: string
        incidentIdentifier:
          type: string
          description: A randomly generated number to help identify your request in the logs for analysis..
        details:
          type: object
          additionalProperties:
            type: object
    LocationCategory:
      type: object
      properties:
        officeId:
          type: string
        id:
          type: string
        description:
          type: string
      description: A representation of a location category
      xml:
        name: location_category
    AssignedLocation:
      type: object
      properties:
        locationId:
          type: string
        officeId:
          type: string
        aliasId:
          type: string
        attribute:
          type: number
        refLocationId:
          type: string
    LocationGroup:
      type: object
      properties:
        id:
          type: string
        locationCategory:
          $ref: '#/components/schemas/LocationCategory'
        officeId:
          type: string
        description:
          type: string
        sharedLocAliasId:
          type: string
        sharedRefLocationId:
          type: string
        locGroupAttribute:
          type: number
        assignedLocations:
          type: array
          items:
            $ref: '#/components/schemas/AssignedLocation'
      description: A representation of a location group
      xml:
        name: location_group
    LocationGroup_CSV:
      type: object
      description: Single LocationGroup or List of LocationGroups in comma separated format
      example: "#LocationGroup Id, OfficeId, Description, CategoryId, CategoryOfficeId, SharedLocAliasId, SharedRefLocationId, LocGroupAttribute\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
    CsvV1LocationGroup:
      type: object
      description: Single LocationGroup or List of LocationGroups in comma separated format
      example: "#LocationGroup Id, OfficeId, Description, CategoryId, CategoryOfficeId, SharedLocAliasId, SharedRefLocationId, LocGroupAttribute\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
    Unit:
      type: object
    Location:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        active:
          type: boolean
        public-name:
          type: string
        long-name:
          type: string
        description:
          type: string
        timezone-name:
          type: string
        location-type:
          type: string
        location-kind:
          type: string
        nation:
          type: string
          enum:
            - US
            - CANADA
            - MEXICO
        state-initial:
          type: string
        county-name:
          type: string
        nearest-city:
          type: string
        horizontal-datum:
          type: string
        published-longitude:
          type: number
          format: double
        published-latitude:
          type: number
          format: double
        vertical-datum:
          type: string
        elevation:
          type: number
          format: double
        map-label:
          type: string
        bounding-office-id:
          type: string
        office-id:
          type: string
    Office:
      type: object
      properties:
        name:
          type: string
        longName:
          type: string
          xml:
            name: long-name
        type:
          type: string
          enum:
            - unknown
            - corps headquarters
            - division headquarters
            - division regional
            - district
            - filed operating activity
        reportsTo:
          type: string
          description: Reference to another office, like a division, that this office reports to.
          xml:
            name: reports-to
      description: A representation of a CWMS office
      xml:
        name: office
    OfficeFormatV1:
      type: object
      properties:
        offices:
          $ref: '#/components/schemas/OfficesFMT'
    OfficesFMT:
      type: object
      properties:
        offices:
          type: array
          items:
            $ref: '#/components/schemas/Office'
    Office_Tabulation:
      type: object
      properties:
        Office:
          type: string
        longName:
          type: string
        officeType:
          type: string
        reportsToOffice:
          type: string
      description: Single Office or List of Offices in tab separated format
      example: "#Office Name<tab>Long Name<tab>Office Type<tab>Reports To Office\r\nCERL\tConstruction Engineering Research Laboratory\tField Operating Activity\tERD\r\nCHL\tCoastal and Hydraulics Laboratory\tField Operating Activity\tERD\r\nNAB\tBaltimore District\tDistrict\tNADNAD\tNorth Atlantic Division\tDivision Headquarters\tHQ"
    TabV1Office:
      type: object
      properties:
        Office:
          type: string
        longName:
          type: string
        officeType:
          type: string
        reportsToOffice:
          type: string
      description: Single Office or List of Offices in tab separated format
      example: "#Office Name<tab>Long Name<tab>Office Type<tab>Reports To Office\r\nCERL\tConstruction Engineering Research Laboratory\tField Operating Activity\tERD\r\nCHL\tCoastal and Hydraulics Laboratory\tField Operating Activity\tERD\r\nNAB\tBaltimore District\tDistrict\tNADNAD\tNorth Atlantic Division\tDivision Headquarters\tHQ"
    Office_CSV:
      type: object
      properties:
        Office:
          type: string
        longName:
          type: string
        officeType:
          type: string
        reportsToOffice:
          type: string
      description: Single Office or List of Offices in comma separated format
      example: "#Office Name,Long Name,Office Type,Reports To Office\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
    CsvV1Office:
      type: object
      properties:
        Office:
          type: string
        longName:
          type: string
        officeType:
          type: string
        reportsToOffice:
          type: string
      description: Single Office or List of Offices in comma separated format
      example: "#Office Name,Long Name,Office Type,Reports To Office\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
    LocationLevel:
      required:
        - location-level-id
        - office-id
      type: object
      properties:
        location-level-id:
          type: string
          description: Name of the location level
        office-id:
          type: string
          description: Owning office of the level
        seasonal-time-series-id:
          type: string
          description: Timeseries ID (e.g. from the times series catalog) to use as the location level. Mutually exclusive with seasonalValues and siParameterUnitsConstantValue
        seasonal-values:
          type: array
          description: List of Repeating seasonal values. The values repeater after the specified interval. A yearly interval seasonable could have 12 different values, one for each month for example. Mutually exclusive with seasonalTimeSeriesId and siParameterUnitsConstantValue
          items:
            $ref: '#/components/schemas/SeasonalValueBean'
        specified-level-id:
          type: string
          description: Generic name of this location level. Common names are 'Top of Dam', 'Streambed', 'Bottom of Dam'.
        parameter-type-id:
          type: string
          description: To indicate if single or aggregate value
          enum:
            - Inst
            - Ave
            - Min
            - Max
            - Total
        parameter-id:
          type: string
          description: Data Type such as Stage, Elevation, or others.
        constant-value:
          type: number
          description: Single value for this location level. Mutually exclusive with seasonableTimeSeriesId and seasonValues.
          format: double
        level-units-id:
          type: string
          description: Units thhe provided levels are in
        level-date:
          type: string
          description: The date/time at which this location level configuration takes effect.
          format: date-time
        level-comment:
          type: string
        interval-origin:
          type: string
          description: The start point of provided seasonal values
          format: date-time
        interval-months:
          type: integer
          format: int32
        interval-minutes:
          type: integer
          format: int32
        interpolate-string:
          type: string
          description: Indicating whether or not to interpolate between seasonal values.
          enum:
            - T
            - F
        duration-id:
          type: string
          description: 0 if parameterTypeId is Inst. Otherwise duration indicating the time window of the aggregate value.
        attribute-value:
          type: number
        attribute-units-id:
          type: string
        attribute-parameter-type-id:
          type: string
        attribute-parameter-id:
          type: string
        attribute-duration-id:
          type: string
        attribute-comment:
          type: string
    SeasonalValueBean:
      type: object
      properties:
        value:
          type: number
          format: double
        offset-months:
          type: integer
          format: int32
        offset-minutes:
          type: integer
      description: List of Repeating seasonal values. The values repeater after the specified interval. A yearly interval seasonable could have 12 different values, one for each month for example. Mutually exclusive with seasonalTimeSeriesId and siParameterUnitsConstantValue
    LocationLevels:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
          readOnly: true
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
          readOnly: true
        levels:
          type: array
          description: List of retrieved location levels
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/LocationLevel'
        next-page:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          readOnly: true
        page-size:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          readOnly: true
      xml:
        name: location-levels
    TimeSeriesCategory:
      type: object
      properties:
        officeId:
          type: string
        id:
          type: string
        description:
          type: string
      description: A representation of a TimeSeries category
      xml:
        name: timeseries-category
    AssignedTimeSeries:
      type: object
      properties:
        timeseriesId:
          type: string
        tsCode:
          type: number
        aliasId:
          type: string
        refTsId:
          type: string
        attribute:
          type: integer
          format: int32
    TimeSeriesGroup:
      type: object
      properties:
        id:
          type: string
        timeSeriesCategory:
          $ref: '#/components/schemas/TimeSeriesCategory'
        officeId:
          type: string
        description:
          type: string
        sharedAliasId:
          type: string
        sharedRefTsId:
          type: string
        assignedTimeSeries:
          type: array
          items:
            $ref: '#/components/schemas/AssignedTimeSeries'
      description: A representation of a timeseries group
      xml:
        name: timeseries-group
    Offset:
      type: object
      properties:
        estimate:
          type: boolean
          xml:
            attribute: true
        toDatum:
          type: string
          xml:
            name: to-datum
        value:
          type: number
          format: double
    TimeSeries:
      required:
        - units
      type: object
      properties:
        begin:
          type: string
          description: The requested start time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')
          format: date-time
          readOnly: true
        end:
          type: string
          description: The requested end time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')
          format: date-time
          readOnly: true
        interval:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            nano:
              type: integer
              format: int32
            units:
              type: array
              items:
                type: object
                properties:
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      nano:
                        type: integer
                        format: int32
                      zero:
                        type: boolean
                      negative:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  dateBased:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
            negative:
              type: boolean
          description: The interval of the time-series, in ISO-8601 duration format
          format: Java Duration
          readOnly: true
        interval-offset:
          type: integer
          description: Offset from top of interval
          format: int64
          readOnly: true
        name:
          type: string
          description: Time-series name
        next-page:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          readOnly: true
        office-id:
          type: string
          description: Office ID that owns the time-series
        page:
          type: string
          description: The cursor to the current page of data
          readOnly: true
        page-size:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          readOnly: true
        time-zone:
          type: string
          description: Only on 21.1.1 Database. The timezone the Interval Offset is from.
          readOnly: true
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
          readOnly: true
        units:
          type: string
          description: The units of the time series data
        value-columns:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/TimeSeries.Column'
        values:
          type: array
          xml:
            wrapped: true
          items:
            type: array
            example:
              - 123
              - 54.3
              - 0
            items:
              type: object
              properties:
                date-time:
                  type: integer
                  description: Milliseconds since 1970-01-01 (Unix Epoch), always UTC
                  format: int64
                value:
                  type: number
                  description: Requested time-series data value
                  format: double
                quality-code:
                  type: integer
                  format: int32
              description: List of retrieved time-series values
        vertical-datum-info:
          $ref: '#/components/schemas/VerticalDatumInfo'
      xml:
        name: timeseries
    TimeSeries.Column:
      type: object
      properties:
        name:
          type: string
        ordinal:
          type: integer
          format: int32
        datatype:
          type: string
      readOnly: true
    TimeSeries.Record:
      type: object
      properties:
        date-time:
          type: integer
          description: Milliseconds since 1970-01-01 (Unix Epoch), always UTC
          format: int64
        value:
          type: number
          description: Requested time-series data value
          format: double
        quality-code:
          type: integer
          format: int32
      description: List of retrieved time-series values
    VerticalDatumInfo:
      type: object
      properties:
        office:
          type: string
          xml:
            attribute: true
        unit:
          type: string
          xml:
            attribute: true
        location:
          type: string
        native-datum:
          type: string
        elevation:
          type: number
          format: double
        offsets:
          type: array
          xml:
            name: offset
          items:
            $ref: '#/components/schemas/Offset'
      xml:
        name: vertical-datum-info
    ParameterSpec:
      type: object
      properties:
        parameter:
          type: string
        in-range-method:
          type: string
        out-range-low-method:
          type: string
        out-range-high-method:
          type: string
    RatingTemplate:
      type: object
      properties:
        office-id:
          type: string
        id:
          type: string
        version:
          type: string
        description:
          type: string
        dependent-parameter:
          type: string
        independent-parameter-specs:
          type: array
          items:
            $ref: '#/components/schemas/ParameterSpec'
        rating-ids:
          type: array
          items:
            type: string
    RatingTemplates:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
          readOnly: true
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
          readOnly: true
        templates:
          type: array
          items:
            $ref: '#/components/schemas/RatingTemplate'
        next-page:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          readOnly: true
        page-size:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          readOnly: true
    IndependentRoundingSpec:
      type: object
      properties:
        position:
          type: integer
          format: int32
        value:
          type: string
    RatingSpec:
      type: object
      properties:
        office-id:
          type: string
        rating-id:
          type: string
        template-id:
          type: string
        location-id:
          type: string
        version:
          type: string
        source-agency:
          type: string
        in-range-method:
          type: string
        out-range-low-method:
          type: string
        out-range-high-method:
          type: string
        active:
          type: boolean
        auto-update:
          type: boolean
        auto-activate:
          type: boolean
        auto-migrate-extension:
          type: boolean
        independent-rounding-specs:
          type: array
          items:
            $ref: '#/components/schemas/IndependentRoundingSpec'
        dependent-rounding-spec:
          type: string
        description:
          type: string
        effective-dates:
          type: array
          items:
            type: string
            format: date-time
    RatingSpecs:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
          readOnly: true
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
          readOnly: true
        specs:
          type: array
          items:
            $ref: '#/components/schemas/RatingSpec'
        next-page:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          readOnly: true
        page-size:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          readOnly: true
    AbstractRatingMetadata:
      type: object
      properties:
        office-id:
          type: string
        rating-spec-id:
          type: string
        units-id:
          type: string
        active:
          type: boolean
        effective-date:
          type: string
          format: date-time
        create-date:
          type: string
          format: date-time
        transition-date:
          type: string
          format: date-time
        description:
          type: string
        vertical-datum-info:
          $ref: '#/components/schemas/VerticalDatumInfo'
        rating-type:
          type: string
      description: Rating Metadata
      discriminator:
        propertyName: rating-type
        mapping:
          table: '#/components/schemas/TableRating'
          transitional: '#/components/schemas/TransitionalRating'
          virtual: '#/components/schemas/VirtualRating'
          expression-rating: '#/components/schemas/ExpressionRating'
          usgs: '#/components/schemas/UsgsStreamRating'
      oneOf:
        - $ref: '#/components/schemas/TableRating'
        - $ref: '#/components/schemas/TransitionalRating'
        - $ref: '#/components/schemas/VirtualRating'
        - $ref: '#/components/schemas/ExpressionRating'
        - $ref: '#/components/schemas/UsgsStreamRating'
    ExpressionRating:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractRatingMetadata'
        - type: object
          properties:
            expression:
              type: string
    RatingMetadata:
      type: object
      properties:
        rating-spec:
          $ref: '#/components/schemas/RatingSpec'
        ratings:
          type: array
          items:
            $ref: '#/components/schemas/AbstractRatingMetadata'
    RatingMetadataList:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
          readOnly: true
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
          readOnly: true
        rating-metadata:
          type: array
          items:
            $ref: '#/components/schemas/RatingMetadata'
        next-page:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          readOnly: true
        page-size:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          readOnly: true
    SourceRating:
      type: object
    TableRating:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractRatingMetadata'
        - type: object
          properties:
            in-range-method:
              type: string
            out-range-low-method:
              type: string
            out-range-high-method:
              type: string
    TransitionalRating:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractRatingMetadata'
        - type: object
          properties:
            source-ratings:
              type: array
              items:
                type: string
            conditions:
              type: array
              items:
                type: string
            evaluations:
              type: array
              items:
                type: string
    UsgsStreamRating:
      type: object
      allOf:
        - $ref: '#/components/schemas/TableRating'
    VirtualRating:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractRatingMetadata'
        - type: object
          properties:
            source-ratings:
              type: array
              items:
                $ref: '#/components/schemas/SourceRating'
            connections:
              type: string
    DatabaseLoadMethod:
      type: string
      enum:
        - EAGER
        - LAZY
        - REFERENCE
    CatalogableEndpoint:
      type: string
      description: Set of data for which a larger catalog can be built.
      enum:
        - TIMESERIES
        - LOCATIONS
    UnitSystem:
      type: string
      description: Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to SI.
      enum:
        - SI
        - EN
    Catalog:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
          readOnly: true
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
          readOnly: true
        entries:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CatalogEntry'
        next-page:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          readOnly: true
        page-size:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          readOnly: true
      xml:
        name: catalog
    CatalogEntry:
      type: object
      properties:
        office:
          type: string
          xml:
            attribute: true
      xml:
        name: entry
      oneOf:
        - $ref: '#/components/schemas/LocationCatalogEntry'
        - $ref: '#/components/schemas/TimeseriesCatalogEntry'
    LocationAlias:
      type: object
      properties:
        name:
          type: string
          xml:
            attribute: true
        value:
          type: string
      xml:
        name: alias
    LocationCatalogEntry:
      type: object
      properties:
        office:
          type: string
          xml:
            attribute: true
        name:
          type: string
        nearestCity:
          type: string
        publicName:
          type: string
        longName:
          type: string
        description:
          type: string
        kind:
          type: string
        type:
          type: string
        timeZone:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        publishedLatitude:
          type: number
          format: double
        publishedLongitude:
          type: number
          format: double
        horizontalDatum:
          type: string
        elevation:
          type: number
          format: double
        unit:
          type: string
        verticalDatum:
          type: string
        nation:
          type: string
        state:
          type: string
        county:
          type: string
        boundingOffice:
          type: string
        mapLabel:
          type: string
        active:
          type: boolean
        aliases:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/LocationAlias'
      xml:
        name: entry
    TimeSeriesExtents:
      type: object
      properties:
        earliestTime:
          type: string
          description: Earliest value in the timeseries
          format: date-time
          xml:
            name: earliest-time
        lastUpdate:
          type: string
          description: Last update in the timeseries
          format: date-time
          xml:
            name: last-update
        latestTime:
          type: string
          description: Latest value in the timeseries
          format: date-time
          xml:
            name: latest-time
        versionTime:
          type: string
          description: TimeSeries version to which this extent information applies
          format: date-time
      description: TimeSeries extent information
      xml:
        name: extents
    TimeseriesCatalogEntry:
      type: object
      properties:
        office:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        units:
          type: string
        interval:
          type: string
        intervalOffset:
          type: integer
          description: Offset from top of interval
          format: int64
          xml:
            name: interval-offset
        timeZone:
          type: string
          description: Only on 21.1.1 Database. The timezone the Interval Offset is from.
          xml:
            name: time-zone
        extents:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TimeSeriesExtents'
      xml:
        name: entry
    Basin:
      type: object
      properties:
        basinName:
          type: string
        officeId:
          type: string
        primaryStream:
          $ref: '#/components/schemas/Stream'
        sortOrder:
          type: number
          format: double
        basinArea:
          type: number
          format: double
        contributingArea:
          type: number
          format: double
        parentBasinId:
          type: string
    Stream:
      type: object
      properties:
        streamName:
          type: string
        tributaries:
          type: array
          items:
            $ref: '#/components/schemas/Stream'
        streamReaches:
          type: array
          items:
            $ref: '#/components/schemas/StreamReach'
        divertingStreamId:
          type: string
        receivingStreamId:
          type: string
        confluenceBank:
          type: string
        diversionBank:
          type: string
        streamLength:
          type: number
          format: double
        confluenceStation:
          type: number
          format: double
        diversionStation:
          type: number
          format: double
        streamLocations:
          type: array
          items:
            $ref: '#/components/schemas/StreamLocation'
        officeId:
          type: string
        comment:
          type: string
        averageSlope:
          type: number
          format: double
    StreamLocation:
      type: object
      properties:
        locationName:
          type: string
        streamName:
          type: string
        station:
          type: number
          format: double
        bank:
          type: string
        officeId:
          type: string
        publishedStation:
          type: number
          format: double
        lowestMeasurableStage:
          type: number
          format: double
        totalDrainageArea:
          type: number
          format: double
        ungagedDrainageArea:
          type: number
          format: double
        nagivationStation:
          type: number
          format: double
    StreamReach:
      type: object
      properties:
        upstreamLocationName:
          type: string
        downstreamLocationName:
          type: string
        streamName:
          type: string
        reachName:
          type: string
        officeId:
          type: string
        comment:
          type: string
        configuration:
          type: string
    Blob:
      required:
        - id
        - office
      type: object
      properties:
        office:
          type: string
        id:
          type: string
        description:
          type: string
        mediaTypeId:
          type: string
        value:
          type: array
          items:
            type: string
            format: byte
      description: List of retrieved blobs
    Blobs:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
          readOnly: true
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
          readOnly: true
        blobs:
          type: array
          description: List of retrieved blobs
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Blob'
        next-page:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          readOnly: true
        page-size:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          readOnly: true
      xml:
        name: blobs
    Clob:
      required:
        - id
        - office
      type: object
      properties:
        office:
          type: string
        id:
          type: string
        description:
          type: string
        value:
          type: string
      description: List of retrieved clobs
      xml:
        name: clob
    Clobs:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
          readOnly: true
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
          readOnly: true
        clobs:
          type: array
          description: List of retrieved clobs
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Clob'
        next-page:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          readOnly: true
        page-size:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          readOnly: true
      xml:
        name: clobs
    Pool:
      type: object
      properties:
        attribute:
          type: number
        description:
          type: string
        clobText:
          type: string
        topLevelId:
          type: string
        bottomLevelId:
          type: string
        projectId:
          type: string
        poolName:
          $ref: '#/components/schemas/PoolNameType'
        implicit:
          type: boolean
      description: List of retrieved pools
    PoolNameType:
      type: object
      properties:
        officeId:
          type: string
        poolName:
          type: string
    Pools:
      type: object
      properties:
        page:
          type: string
          description: The cursor to the current page of data
          readOnly: true
        total:
          type: integer
          description: The total number of records retrieved; null or not present if not supported or unknown
          format: int32
          readOnly: true
        pools:
          type: array
          description: List of retrieved pools
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Pool'
        next-page:
          type: string
          description: The cursor to the next page of data; null if there is no more data
          readOnly: true
        page-size:
          type: integer
          description: The number of records fetched per-page; this may be larger than the number of records actually retrieved
          format: int32
          readOnly: true
      xml:
        name: pools
    SpecifiedLevel:
      type: object
      properties:
        id:
          type: string
        officeId:
          type: string
        description:
          type: string
