/*
 * MIT License
 *
 * Copyright (c) 2024 Hydrologic Engineering Center
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id "com.palantir.git-version" version "3.1.0"
    id("org.sonarqube") version "5.0.0.4638"
}

def versionLabel(gitInfo) {
    def branch = gitInfo.branchName // all branches are snapshots, only tags get released
    def tag = gitInfo.lastTag
    // tag is returned as is. Branch may need cleanup
    return branch == null ? tag : 99 + "." + branch.replace("/","-") + "-SNAPSHOT"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'
    apply plugin: 'project-report'

    version = versionLabel(versionDetails())
    group = "mil.army.usace.hec"

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    test {
        finalizedBy jacocoTestReport
    }

    checkstyle {
        toolVersion '9.0.1'
    }

    jacoco {
        toolVersion = "0.8.7"
    }

    jacocoTestReport {
        dependsOn test
        reports {
            csv.required = true
            xml.required = true
            html.outputLocation = layout.buildDirectory.dir('jacoco')
        }
    }
    sonarqube {
        properties {
            property "sonar.sources", "src/main/java"
            property "sonar.tests", "src/test/java"
            property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        }
    }
}

sonar {
    properties {
        property "sonar.projectKey", "HydrologicEngineeringCenter_cwms-data-api-client"
        property "sonar.organization", "hydrologicengineeringcenter"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.pullrequest.provider", "GitHub"
        property "sonar.pullrequest.github.repository", "HydrologicEngineeringCenter/cwms-data-api-client"
        property "sonar.projectVersion", versionDetails().lastTag + "+"
    }
}