/*
 * MIT License
 *
 * Copyright (c) 2021 Hydrologic Engineering Center
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id "cwms-data-api-client.java-conventions"
    id "cwms-data-api-client.deps-conventions"
    id "cwms-data-api-client.publishing-conventions"
    id 'java-test-fixtures'
}

dependencies {
    implementation(platform(libs.okhttp.bom))
    implementation(libs.okhttp)
    implementation(libs.okhttp.urlconnection)
    implementation(libs.okhttp.logging)
    implementation(libs.metrics)
    implementation(libs.lookup)
    implementation(libs.jackson.jsr310)
    implementation(libs.jwt)

    runtimeOnly(libs.metrics.codahale)
    annotationProcessor(libs.service.annotations)

    testImplementation(libs.junit.api)
    testImplementation(platform(libs.okhttp.bom))
    testImplementation(libs.okhttp.mockwebserver)
    testRuntimeOnly(libs.junit.engine)

    testFixturesImplementation(platform(libs.okhttp.bom))
    testFixturesImplementation(libs.okhttp)
    testFixturesImplementation(libs.okhttp.mockwebserver)
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = "cwms-http-client"
            from components.java
        }
    }
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['mil/army/usace/hec/cwms/http/client/CwmsHttpMetricsServiceProvider*',
                                        'mil/army/usace/hec/cwms/http/client/auth/Cac*'])
        }))
    }
}
